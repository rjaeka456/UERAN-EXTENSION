/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "XnAP-IEs"
 * 	found in "./xnap-15.5.0.asn1"
 * 	`asn1c -fcompound-names -pdu=all -findirect-choice -fno-include-deps -gen-PER -no-gen-OER -no-gen-example -D xnap`
 */

#ifndef	_CauseRadioNetworkLayer_H_
#define	_CauseRadioNetworkLayer_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NativeEnumerated.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum CauseRadioNetworkLayer {
	CauseRadioNetworkLayer_cell_not_available	= 0,
	CauseRadioNetworkLayer_handover_desirable_for_radio_reasons	= 1,
	CauseRadioNetworkLayer_handover_target_not_allowed	= 2,
	CauseRadioNetworkLayer_invalid_AMF_Set_ID	= 3,
	CauseRadioNetworkLayer_no_radio_resources_available_in_target_cell	= 4,
	CauseRadioNetworkLayer_partial_handover	= 5,
	CauseRadioNetworkLayer_reduce_load_in_serving_cell	= 6,
	CauseRadioNetworkLayer_resource_optimisation_handover	= 7,
	CauseRadioNetworkLayer_time_critical_handover	= 8,
	CauseRadioNetworkLayer_tXnRELOCoverall_expiry	= 9,
	CauseRadioNetworkLayer_tTXnRELOCprep_expiry	= 10,
	CauseRadioNetworkLayer_unknown_GUAMI_ID	= 11,
	CauseRadioNetworkLayer_unknown_local_NG_RAN_node_UE_XnAP_ID	= 12,
	CauseRadioNetworkLayer_inconsistent_remote_NG_RAN_node_UE_XnAP_ID	= 13,
	CauseRadioNetworkLayer_encryption_and_or_integrity_protection_algorithms_not_supported	= 14,
	CauseRadioNetworkLayer_protection_algorithms_not_supported	= 15,
	CauseRadioNetworkLayer_multiple_PDU_session_ID_instances	= 16,
	CauseRadioNetworkLayer_unknown_PDU_session_ID	= 17,
	CauseRadioNetworkLayer_unknown_QoS_Flow_ID	= 18,
	CauseRadioNetworkLayer_multiple_QoS_Flow_ID_instances	= 19,
	CauseRadioNetworkLayer_switch_off_ongoing	= 20,
	CauseRadioNetworkLayer_not_supported_5QI_value	= 21,
	CauseRadioNetworkLayer_tXnDCoverall_expiry	= 22,
	CauseRadioNetworkLayer_tXnDCprep_expiry	= 23,
	CauseRadioNetworkLayer_action_desirable_for_radio_reasons	= 24,
	CauseRadioNetworkLayer_reduce_load	= 25,
	CauseRadioNetworkLayer_resource_optimisation	= 26,
	CauseRadioNetworkLayer_time_critical_action	= 27,
	CauseRadioNetworkLayer_target_not_allowed	= 28,
	CauseRadioNetworkLayer_no_radio_resources_available	= 29,
	CauseRadioNetworkLayer_invalid_QoS_combination	= 30,
	CauseRadioNetworkLayer_encryption_algorithms_not_supported	= 31,
	CauseRadioNetworkLayer_procedure_cancelled	= 32,
	CauseRadioNetworkLayer_rRM_purpose	= 33,
	CauseRadioNetworkLayer_improve_user_bit_rate	= 34,
	CauseRadioNetworkLayer_user_inactivity	= 35,
	CauseRadioNetworkLayer_radio_connection_with_UE_lost	= 36,
	CauseRadioNetworkLayer_failure_in_the_radio_interface_procedure	= 37,
	CauseRadioNetworkLayer_bearer_option_not_supported	= 38,
	CauseRadioNetworkLayer_up_integrity_protection_not_possible	= 39,
	CauseRadioNetworkLayer_up_confidentiality_protection_not_possible	= 40,
	CauseRadioNetworkLayer_resources_not_available_for_the_slice_s	= 41,
	CauseRadioNetworkLayer_ue_max_IP_data_rate_reason	= 42,
	CauseRadioNetworkLayer_cP_integrity_protection_failure	= 43,
	CauseRadioNetworkLayer_uP_integrity_protection_failure	= 44,
	CauseRadioNetworkLayer_slice_not_supported_by_NG_RAN	= 45,
	CauseRadioNetworkLayer_mN_Mobility	= 46,
	CauseRadioNetworkLayer_sN_Mobility	= 47,
	CauseRadioNetworkLayer_count_reaches_max_value	= 48,
	CauseRadioNetworkLayer_unknown_old_en_gNB_UE_X2AP_ID	= 49,
	CauseRadioNetworkLayer_pDCP_Overload	= 50,
	CauseRadioNetworkLayer_drb_id_not_available	= 51,
	CauseRadioNetworkLayer_unspecified	= 52,
	/*
	 * Enumeration is extensible
	 */
	CauseRadioNetworkLayer_ue_context_id_not_known	= 53,
	CauseRadioNetworkLayer_non_relocation_of_context	= 54
} e_CauseRadioNetworkLayer;

/* CauseRadioNetworkLayer */
typedef long	 CauseRadioNetworkLayer_t;

/* Implementation */
extern asn_per_constraints_t asn_PER_type_CauseRadioNetworkLayer_constr_1;
extern asn_TYPE_descriptor_t asn_DEF_CauseRadioNetworkLayer;
extern const asn_INTEGER_specifics_t asn_SPC_CauseRadioNetworkLayer_specs_1;
asn_struct_free_f CauseRadioNetworkLayer_free;
asn_struct_print_f CauseRadioNetworkLayer_print;
asn_constr_check_f CauseRadioNetworkLayer_constraint;
ber_type_decoder_f CauseRadioNetworkLayer_decode_ber;
der_type_encoder_f CauseRadioNetworkLayer_encode_der;
xer_type_decoder_f CauseRadioNetworkLayer_decode_xer;
xer_type_encoder_f CauseRadioNetworkLayer_encode_xer;
per_type_decoder_f CauseRadioNetworkLayer_decode_uper;
per_type_encoder_f CauseRadioNetworkLayer_encode_uper;

#ifdef __cplusplus
}
#endif

#endif	/* _CauseRadioNetworkLayer_H_ */
#include <asn_internal.h>
