/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "XnAP-PDU-Descriptions"
 * 	found in "./xnap-15.5.0.asn1"
 * 	`asn1c -fcompound-names -pdu=all -findirect-choice -fno-include-deps -gen-PER -no-gen-OER -no-gen-example -D xnap`
 */

#ifndef	_SuccessfulOutcome_H_
#define	_SuccessfulOutcome_H_


#include <asn_application.h>

/* Including external dependencies */
#include "ProcedureCode.h"
#include "Criticality.h"
#include <ANY.h>
#include <asn_ioc.h>
#include "HandoverRequest.h"
#include "HandoverRequestAcknowledge.h"
#include "HandoverPreparationFailure.h"
#include "RetrieveUEContextRequest.h"
#include "RetrieveUEContextResponse.h"
#include "RetrieveUEContextFailure.h"
#include "SNodeAdditionRequest.h"
#include "SNodeAdditionRequestAcknowledge.h"
#include "SNodeAdditionRequestReject.h"
#include "SNodeModificationRequest.h"
#include "SNodeModificationRequestAcknowledge.h"
#include "SNodeModificationRequestReject.h"
#include "SNodeModificationRequired.h"
#include "SNodeModificationConfirm.h"
#include "SNodeModificationRefuse.h"
#include "SNodeReleaseRequest.h"
#include "SNodeReleaseRequestAcknowledge.h"
#include "SNodeReleaseReject.h"
#include "SNodeReleaseRequired.h"
#include "SNodeReleaseConfirm.h"
#include "SNodeChangeRequired.h"
#include "SNodeChangeConfirm.h"
#include "SNodeChangeRefuse.h"
#include "XnRemovalRequest.h"
#include "XnRemovalResponse.h"
#include "XnRemovalFailure.h"
#include "XnSetupRequest.h"
#include "XnSetupResponse.h"
#include "XnSetupFailure.h"
#include "NGRANNodeConfigurationUpdate.h"
#include "NGRANNodeConfigurationUpdateAcknowledge.h"
#include "NGRANNodeConfigurationUpdateFailure.h"
#include "E-UTRA-NR-CellResourceCoordinationRequest.h"
#include "E-UTRA-NR-CellResourceCoordinationResponse.h"
#include "CellActivationRequest.h"
#include "CellActivationResponse.h"
#include "CellActivationFailure.h"
#include "ResetRequest.h"
#include "ResetResponse.h"
#include "SNStatusTransfer.h"
#include "HandoverCancel.h"
#include "RANPaging.h"
#include "XnUAddressIndication.h"
#include "UEContextRelease.h"
#include "SNodeReconfigurationComplete.h"
#include "SNodeCounterCheckRequest.h"
#include "RRCTransfer.h"
#include "ErrorIndication.h"
#include "PrivateMessage.h"
#include "NotificationControlIndication.h"
#include "ActivityNotification.h"
#include "SecondaryRATDataUsageReport.h"
#include <OPEN_TYPE.h>
#include <constr_CHOICE.h>
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum SuccessfulOutcome__value_PR {
	SuccessfulOutcome__value_PR_NOTHING,	/* No components present */
	SuccessfulOutcome__value_PR_HandoverRequestAcknowledge,
	SuccessfulOutcome__value_PR_RetrieveUEContextResponse,
	SuccessfulOutcome__value_PR_SNodeAdditionRequestAcknowledge,
	SuccessfulOutcome__value_PR_SNodeModificationRequestAcknowledge,
	SuccessfulOutcome__value_PR_SNodeModificationConfirm,
	SuccessfulOutcome__value_PR_SNodeReleaseRequestAcknowledge,
	SuccessfulOutcome__value_PR_SNodeReleaseConfirm,
	SuccessfulOutcome__value_PR_SNodeChangeConfirm,
	SuccessfulOutcome__value_PR_XnRemovalResponse,
	SuccessfulOutcome__value_PR_XnSetupResponse,
	SuccessfulOutcome__value_PR_NGRANNodeConfigurationUpdateAcknowledge,
	SuccessfulOutcome__value_PR_E_UTRA_NR_CellResourceCoordinationResponse,
	SuccessfulOutcome__value_PR_CellActivationResponse,
	SuccessfulOutcome__value_PR_ResetResponse
} SuccessfulOutcome__value_PR;

/* SuccessfulOutcome */
typedef struct SuccessfulOutcome {
	ProcedureCode_t	 procedureCode;
	Criticality_t	 criticality;
	struct SuccessfulOutcome__value {
		SuccessfulOutcome__value_PR present;
		union SuccessfulOutcome__value_u {
			HandoverRequestAcknowledge_t	 HandoverRequestAcknowledge;
			RetrieveUEContextResponse_t	 RetrieveUEContextResponse;
			SNodeAdditionRequestAcknowledge_t	 SNodeAdditionRequestAcknowledge;
			SNodeModificationRequestAcknowledge_t	 SNodeModificationRequestAcknowledge;
			SNodeModificationConfirm_t	 SNodeModificationConfirm;
			SNodeReleaseRequestAcknowledge_t	 SNodeReleaseRequestAcknowledge;
			SNodeReleaseConfirm_t	 SNodeReleaseConfirm;
			SNodeChangeConfirm_t	 SNodeChangeConfirm;
			XnRemovalResponse_t	 XnRemovalResponse;
			XnSetupResponse_t	 XnSetupResponse;
			NGRANNodeConfigurationUpdateAcknowledge_t	 NGRANNodeConfigurationUpdateAcknowledge;
			E_UTRA_NR_CellResourceCoordinationResponse_t	 E_UTRA_NR_CellResourceCoordinationResponse;
			CellActivationResponse_t	 CellActivationResponse;
			ResetResponse_t	 ResetResponse;
		} choice;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} value;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} SuccessfulOutcome_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_SuccessfulOutcome;
extern asn_SEQUENCE_specifics_t asn_SPC_SuccessfulOutcome_specs_1;
extern asn_TYPE_member_t asn_MBR_SuccessfulOutcome_1[3];

#ifdef __cplusplus
}
#endif

#endif	/* _SuccessfulOutcome_H_ */
#include <asn_internal.h>
